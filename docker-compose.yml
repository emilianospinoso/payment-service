version: "2"

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: bitnami/zookeeper:latest
    networks:
      - kafka-net
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-server:
    image: bitnami/kafka:latest
    networks:
      - kafka-net
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper-server

  postgress:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./Database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./Database/accounts.sql:/docker-entrypoint-initdb.d/2-accounts.sql
      - ./Database/custom.sql:/docker-entrypoint-initdb.d/3-custom.sql
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: tech
      POSTGRES_PASSWORD: test
      POSTGRES_DB: payments

  payment-processor:
    build:
      context: ./payment-processor
      dockerfile: Dockerfile
    networks:
      - kafka-net
    depends_on:
      - kafka-server
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka-server:9092
      ZOOKEEPER_CONNECT: zookeeper-server:2181
      SPRING_KAFKA_CONSUMER_GROUP_ID: myGroup
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_DATASOURCE_URL: jdbc:h2:file:/app/app.jar
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_H2_CONSOLE_ENABLED: true
      SPRING_H2_CONSOLE_PATH: /h2-console
      SPRING_THYMELEAF_PREFIX: classpath:/templates/
      SPRING_THYMELEAF_SUFFIX: .html
      SPRING_THYMELEAF_MODE: HTML
      SPRING_THYMELEAF_ENCODING: UTF-8
      SPRING_THYMELEAF_CONTENT_TYPE: text/html
      SPRING_THYMELEAF_CACHE: false
    volumes:
      - ./payment-processor/target:/app

  payment-quarantine:
      build:
        context: ./payment-quarantine
        dockerfile: Dockerfile
      networks:
        - kafka-net
      depends_on:
        - kafka-server
      environment:
        SERVER_PORT: 8082
        SPRING_DATASOURCE_URL: jdbc:h2:file:/app/app.jar
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.h2.Driver
        SPRING_DATASOURCE_USERNAME: sa
        SPRING_DATASOURCE_PASSWORD: password
        SPRING_H2_CONSOLE_ENABLED: true
        SPRING_H2_CONSOLE_PATH: /h2-console
        PAYMENT_ENDPOINT: http://localhost:9000/payment
        SPRING_THYMELEAF_PREFIX: classpath:/templates/
        SPRING_THYMELEAF_SUFFIX: .html
        SPRING_THYMELEAF_MODE: HTML
        SPRING_THYMELEAF_ENCODING: UTF-8
        SPRING_THYMELEAF_CONTENT_TYPE: text/html
        SPRING_THYMELEAF_CACHE: false
      volumes:
        - ./payment-quarantine/target:/app